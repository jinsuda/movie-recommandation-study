
유저가 영화를 검색하면 그 영화 장르와 비슷한 영화 추천
영화마다 장르가 n개

영화 장르전부를 벡터화해서 코사인유사도로 가장 유사한 영화  홈페이지에 10개 나열

4. find_sim_movie 함수 이용

5. 예시
    search_movie = 'title'

    recommand_movies =  recommand_movies.append(find_sim_movie(movie_)) 
    

6. 홈페이지에 10개를 나타내게 한다


추천 알고리즘 다 돌려놓고
 @app.get('/recommand/{movie_title}')  # movie_title 를 db에서 받아온다
 def find_sim_movie()



import mysql.connector

# 데이터베이스 연결 설정
conn = mysql.connector.connect(
    host="localhost",
    user="myusername",
    password="mypassword",
    database="mydatabase"
)
# SQL 쿼리 작성
query = "SELECT * FROM table title = '아바타'"

# 쿼리 실행 및 결과 추출
cursor = conn.cursor()
cursor.execute(query)
results = cursor.fetchall()

# 결과를 Json 형태로 변환
10개 영화

movies = [10개]
for result in results:
    movie = [
        {
        "title": result[0],
        "genres": result[1],
        "release_year": result[2],
        overview
        original_title
        vote_average
        vote_count
        poster_path
        },
        {
            ....
        },
        ...
    ]
    movies.append(movie)
json_data = json.dumps(movies)

# 변환된 Json 반환
return json_data


## db에서 추천된 영화 목록을 가져와서 json형태로 가져오기
from pymongo import MongoClient

# client = MongoClient('localhost', 27017)
client = MongoClient("mongodb://localhost:27017/")

# db = client.test_database
db = client['test-db'] # test-db라는 이름의 데이터베이스에 접속

print(client.list_database_names()) # ['admin', 'config', 'local', 'test-database']







https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US

https://developers.themoviedb.org/3/movies/get-movie-credits

영화데이터랑 같은 movie_id 받아서 json 받기

"cast"
cast_id 
id (people id) 
name 
job 
character  
credit_id  
gender 

"crew"
credit_id
id (people id)
name
job
department
gender
